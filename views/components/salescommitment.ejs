<div class="table-responsive text-nowrap p-4">
  <h3>Sale commitments</h3>
  <a class="btn btn-success text-white" href="#" onclick="openpcModal()">Add New</a>
  <table class="table" id="salescommitmenttable">
    <thead>
      <tr>
        <th>Date</th>
        <th>Commitment id</th>
        <th>Item</th>
        <th>Weight</th>
        <th>Expected Ep</th>
        <th>Price</th>
        <th>Remaining</th>
        <th>Expected Ep</th>
        <th>Action</th>

      </tr>
    </thead>
    <tbody class="table-border-bottom-0" id="table-body">
      <!-- Data will be populated here -->
    </tbody>
  </table>

</div>
<div id="addsalescommitment" class="modal"
  style="display: none; justify-content: center; align-items: center; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5);">
  <div class="modal-content"
    style="background-color: white; padding: 20px; border-radius: 5px; width: 50%;  max-width: 500px; position: relative;">
    <div class="modal-header">
      <h5 class="modal-title" id="modalCenterTitle">Add New Commitment</h5>

    </div>
    <div class="modal-body">
      <div class="row">
        <div class="col mb-3">
          <label for="date" class="form-label">Date</label>
          <input type="date" id="scdate" name="scdate" class="form-control">

        </div>
        <div class="col mb-3">
          <label for="name" class="form-label">Item</label>
          <select type="text" id="scitem" name="scitem" class="form-control items-js" ></select>


        </div>

      </div>

      <div class="row">
        <div class="col mb-3">
          <label for="image" class="form-label">Reference</label>
          <select type="text" id="screference" name="screference" class="form-control items-js-reffernece"></select>

        </div>
        <div class="col mb-3">
          <label for="description" class="form-label">Weight</label>
          <input type="number" id="scweight" name="scweight" class="form-control" placeholder="Enter weight">
        </div>

      </div>
      <div class="row">
        <div class="col mb-3">
          <label for="highlighted" class="form-label">Expected EP %</label>
          <input type="number" id="scep" name="scep" class="form-control" placeholder="Ep %" max="100" value="100">

        </div>
        <div class="col mb-3">
          <label for="highlighted" class="form-label">Rate</label>
          <input type="number" id="scrate" name="scrate" class="form-control" placeholder="Rate">

        </div>
      </div>
      <div class="row">
        <div class="col mb-3">
          <label for="highlighted" class="form-label">Additional</label>
          <input type="text" id="scAdditional" name="scAdditional" class="form-control" placeholder="Additional">

        </div>
        <div class="col mb-3">
          <label for="highlighted" class="form-label">Info</label>
          <input type="text" id="scInfo" name="scInfo" class="form-control" placeholder="Info">

        </div>
      </div>

    </div>
    <div class="modal-footer">
      <button type="button" class="btn btn-outline-secondary" onclick="closepcModal()" data-bs-dismiss="modal">
        Close
      </button>
      <button onclick="submitsalescommitment()" id="submitbutton" class="btn btn-primary">Add Sale Commitment</button>
    </div>
  </div>
</div>
<script>
  function openpcModal() {
    const modal = document.getElementById('addsalescommitment');
    modal.style.display = 'flex';
    const inputElement = document.getElementById('scdate');
    inputElement.focus();
  }

  // Function to close the modal
  function closepcModal() {
    const modal = document.getElementById('addsalescommitment');
    modal.style.display = 'none';
  }

</script>

<script>
  

  window.salescommitments = function () {
    const responsive = '<%= resptype %>' === 'true'; // Convert the string to a boolean
    scTable = $('#salescommitmenttable').DataTable({
      responsive: responsive,
      processing: true,
      serverSide: true,
      ajax: {
        url: '/salescommitments', // Replace with your API endpoint
        dataSrc: 'data', // Key that holds the array of data in the API response
        data: function (d) {
          // Add any additional parameters you want to send to the server here
          d.name = name;
          d.filter = filterdata  // Add the 'name' parameter to the data object
          return d;
        },
      },
      error: function (xhr, error, thrown) {
            // Handle AJAX error here
            console.log('AJAX Error:', error);
        },
      columns: [
      {
        data: 'date',
        render: function (data, type, row) {
          // Format the date using moment.js
          return moment(data).format('DD/MM/YYYY');
        }
      },
        { data: 'id' },
        { data: 'item' },
        { data: 'weight' },
        { data: 'eppercentage' },

        { data: 'rate' },
        { data: 'balanceweight' },
        { data: 'balance' },

        {
          data: null,
          render: function (data, type, row) {
            return `<div class="dropdown">
                <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                  <i class="bx bx-dots-vertical-rounded"></i>
                </button>
                <div class="dropdown-menu">
                  <a class="dropdown-item" ><i class="bx bx-edit me-1"></i> View </a>
                  <a class="dropdown-item delete-sales-commbtn" href="javascript:void(0);"><i class="bx bx-trash me-1"></i> Delete</a>
                </div>
              </div>`;
          },
        },
      ],
    });

    // Delete Button Click Event
    function deletesalescommData(id) {
      $.ajax({
        url: `/deletesalescommitments/${id}/${name}`,
        type: 'DELETE',
        success: function (response) {
          scTable.ajax.reload();
        },
        error: function (error) {
          console.error('Error deleting data:', error);
        },
      });
    }

   
    $('#salescommitmenttable').on('click', '.delete-sales-commbtn', function () {
      if(!confirm('Do you wan to delete this ?')){
      return
    }      var data = scTable.row($(this).closest('tr')).data();
      var id = data._id;
      deletesalescommData(id);
    });

  }



  async function submitsalescommitment() {
    const scdate = document.getElementById('scdate').value;
    const scitem = document.getElementById('scitem').value;
    const screference = document.getElementById('screference').value;
    const scweight = document.getElementById('scweight').value;
    const scep = document.getElementById('scep').value;
    const scrate = document.getElementById('scrate').value;
    scAdditional=document.getElementById('scAdditional').value;
    scInfo=document.getElementById('scInfo').value;
    if(!scdate||!scitem||!screference||!scweight||!scep||!scrate){
      return alert('Please fill Date,Item,Refference,Weight,Ep,Rate fields')
    }
    const payload = {
      name : name,
      scdate: scdate,
      scitem: scitem,
      screference: screference,
      scweight: scweight,
      scep: scep,
      scrate: scrate,
      scInfo:scInfo,
      scAdditional:scAdditional

    };

    try {
      // Use Axios to make the POST request
      const response = await axios.post('/addsalecommitment', payload, {
        headers: {
          'Content-Type': 'application/json',
        },
      });

      // Handle the response (you can add your own logic here)

      // Close the modal after server response

      closepcModal();
      getdetailedreport()
      scTable.ajax.reload();

    } catch (error) {
      // Handle errors, such as network issues or server errors
      console.log('Error:', error);
    }
  }
  $('.items-js').select2({
    dropdownParent: $("#addsalescommitment"),

              ajax: {
                  url: '/getproducts',
                  dataType: 'json',
                  delay: 250, // Delay in milliseconds before making the request
                  processResults: function (data) {
                      return {
                          results: data.results.map(name => ({ id: name, text: name }))
                      };
                  },
                  cache: true // Enable caching to reduce server requests
              }
          });

          $('.items-js-reffernece').select2({
                  dropdownParent: $("#addsalescommitment"),

              ajax: {
                  url: '/getrefferance',
                  dataType: 'json',
                  delay: 250, // Delay in milliseconds before making the request
                  processResults: function (data) {
                      return {
                          results: data.results.map(name => ({ id: name, text: name }))
                      };
                  },
                  cache: true // Enable caching to reduce server requests
              }
          });
</script>