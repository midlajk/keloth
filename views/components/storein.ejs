<div class="table-responsive text-nowrap p-4">
  <h3>Store-In</h3>
  <table class="table" id="storeIntable">
    <thead>
      <tr>
        <!-- <th>Date</th> -->
        <th>Item</th>
        <th>Storage Wgt.</th> 
        <th>Net EP %</th>
        <th>Storage EP</th>
        <th>Action</th>

      </tr>
    </thead>
    <tbody class="table-border-bottom-0" id="table-body">
      <!-- Data will be populated here -->
    </tbody>
  </table>

</div>
<div id="purchasestorebill" class="modal"
  style="display: none; justify-content: center; align-items: center; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5);">
  <div class="modal-content"
    style="background-color: white; padding: 20px; border-radius: 5px; width: 50%;  max-width: 800px; position: relative;">
    <div class="modal-header">
      <h5 class="modal-title" id="modalCenterTitle">New Arrival Storage Settlement</h5>
    

    </div>
    <div class="modal-body"> 
       <h4 class="modal-title" id="modalCenterTitle">Item : <span id="storeinitemname"></span> </h4>
      <h4 class="modal-title" id="modalCenterTitle">Storage Weight : <span id="storeinitemweight"></span> </h4>
      <h4 class="modal-title" id="modalCenterTitle">Ep Percentage :  <span id="storeinitemepp"></span></h4>
      <h4 class="modal-title" id="modalCenterTitle">Net Ep :  <span id="storeinitemep"></span></h4>
      <div class="row" style="margin-top: 10px;">
        <div class="col mb-3">
          <label for="date" class="form-label">Date</label>
          <input type="date" id="ssdate" name="ssdate" class="form-control" >

        </div>
        <div class="col mb-3">
          <label for="image" class="form-label">Crop</label>
          <select type="text" id="sscrop" name="sscrop" class="form-control items-js-reffernece-pccom">
            <option value="<%=reference%>"><%=reference%></option>
          </select>
        </div>
      <div class="col mb-3">
          <label for="image" class="form-label">Tax</label>
          <select  id="ssreference" name="ssreference" class="form-control">
            <option value="0">sgst-0% + cgst-0% + igst-0%</option>
            <option value="5">sgst-2.5% + cgst-2.5% + igst-0%</option>
            <option value="10">sgst-2.5% + cgst-2.5% + igst-5%</option>


          </select>
        </div>
      </div>

      <div class="row">
        
        <div class="col mb-3">
          <label for="description" class="form-label">Weight</label>
          <input type="number" id="ssweight" name="sweight" class="form-control" placeholder="Weight">
        </div>
<div class="col mb-3">
          <label for="highlighted" class="form-label">Average EP %</label>
          <input type="number" id="ssepp" name="ssepp" class="form-control" placeholder="EP %" max="100" value="100">

        </div>
        <div class="col mb-3">
          <label for="highlighted" class="form-label">EP Weight</label>
          <input type="number" id="ssep" disabled name="ssep" class="form-control" placeholder="EP %" max="100" value="100">

        </div>
      </div>
      <div class="row">
        <div class="col mb-3">
          <label for="highlighted" class="form-label">Commitment</label>
          <div class="my-1 flex-nowrap input-group">
            <input type="text" id="sscommitment" name="sscommitment" disabled class="form-control">
            <a class="bg-light fw-bold text-secondary small input-group-text" href="#" onclick="openCommitments()" data-bs-toggle="modal" data-bs-target="#commitmentmodal"><i class="menu-icon tf-icons bx bx-notepad"></i></a>
          </div>
        </div>
        <div class="col mb-3">
          <label for="highlighted" class="form-label">Rate</label>
          <input type="number" id="ssrate" name="ssrate" class="form-control" value="0">

        </div>
        <div class="col mb-3">
          <label for="highlighted" class="form-label">Total</label>
          <input type="number" id="sstotal" name="sstotal" class="form-control" value="0">
<input type="hidden" name="ssitem" id="ssitem">
        </div>
      </div>
    

    </div>
    <div class="modal-footer">
      <button type="button" class="btn btn-outline-secondary" onclick="closepurchasesetllement()"
        data-bs-dismiss="modal">
        Close
      </button>
      <button onclick="postpurchasesettlement()" id="submitbutton" class="btn btn-primary">Add Settlement</button>
    </div>
  </div>
</div>

<div class="modal fade hidden" id="commitmentmodal">
  <div class="modal-dialog modal-dialog-centered" role="document" style="max-width: 700px;"> 
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="commitments-titile"><span id="commitmentparty"> </span> <br><span id="commitmentitem"></span><br><span id="commitment-type"></span>
        </h5>
       

      </div>
      <div class="modal-body">
          <form >
        <div class="row">
          <div class="col  mb-3">
            <!-- <label for="name" class="form-label">Actual Weight</label> -->
            <div class="my-1 flex-nowrap input-group">
              <div class="bg-light text-secondary small input-group-text no-pointer-events" href="#" >Billable Weight</div>
              <input  type="text" name="actualweightcom" id="actualweightcom" oninput="changeep()" class="form-control" placeholder="Actual Weight">
            </div>
           <!-- <label for="image" class="form-label">Ep Weight</label> -->
          
          </div>
          <div class="col mb-3"> 
             <div class="lex-nowrap input-group">
              <div class="bg-light text-secondary small input-group-text no-pointer-events" href="#" >Billable Ep wgt.</div>
              <input  type="text" name="actualepcom" id="actualepcom" class="form-control" oninput="changeweight()" placeholder="Ep Weight">
            </div>
         
                    </div>
          </div>
 
          <div class="row">
          <table lass="table" class="table" id="commitments-table">
          <thead>
            <tr>
              <th>Date</th>
              <th>Commitment</th>
              <th>Balance Wgt.</th>
              <th>Ep Balance</th>
              <th>Rate</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody class="table-border-bottom-0" id="commitment-table-body">
            <!-- Data will be populated here -->
          </tbody>
          </table>
        </div>
        
      </div>
      <div class="modal-footer">
        <!-- <button type="button" class="btn btn-outline-secondary" id="closeModalBtn" data-bs-dismiss="modal">
          Close
        </button> -->
      </div>
  </form>
    </div>
  </div>
 </div>
 <script>
  var billableweight =0;
  var billableep =0;
  var billableeppercentage =0;

  function openCommitments() {


const ditem = document.getElementById('ssitem').value
var billtype = 'Purchase'

document.getElementById('commitmentparty').innerText = name
document.getElementById('commitmentitem').innerText = ditem
document.getElementById('commitment-type').innerText =   'Purchased Commitments' 
document.getElementById('actualepcom').value = billableep
document.getElementById('actualweightcom').value = ((billableep*100)/billableeppercentage).toFixed(1)

var api;
if (billtype === 'Purchase') {
api = 'purchasecommitments';
} else if (billtype === 'Sales') {
api = 'salescommitments';
}

const modal = document.getElementById('commitmentmodal');
modal.style.display = 'flex';
if (dataTable) {
    dataTable.destroy();
}
// Reinitialize the DataTable with new data fetched via AJAX
const responsive = '<%= resptype %>' === 'true'; // Convert the string to a boolean

dataTable = $('#commitments-table').DataTable({
  responsive: responsive,
    processing: true,
    serverSide: true,
    searching: false, // Disable search option
    lengthChange: false,
    ajax: {
        url: '/' + api, 
        dataSrc: 'data', // Key that holds the array of data in the API response
        data: function (d) {
          d.name = name;
          d.item = ditem;
            // Add any additional parameters you want to send to the server here
        },
    },
    columns: [
    {
    data: 'date',
    render: function (data, type, row) {
      // Format the date using moment.js
      return moment(data).format('DD/MM/YYYY');
    }
  },
        { data: 'id' },
        { data: 'balanceweight' },
        { data: 'balance' },
        { data: 'rate' },
        {
      data: null,
      render: function (data, type, row) {
        return `<div class="dropdown">
            <button type="button" class="btn p-0 dropdown-toggle hide-arrow assign-commitment-btn" 
                     data-id="${row.id}"
                    data-weight="${row.balanceweight}"
                    data-rate="${row.rate}"
                    >
              <i class="bx bx-plus-circle text-primary"></i>
            </button>
          </div>`;
      },
    }, // Assuming coffee is an array property
    ],
"autoWidth": false
});
}
$('#commitments-table').on('click', '.assign-commitment-btn', function() {
    // var actualep = document.getElementById('actualepcom').value
    // var actualweightcom = document.getElementById('actualweightcom').value
     var eppercentage = document.getElementById('ssepp').value
    // var weight = 0
    var actualweight =$(this).data('weight'); 
    var actualep = ((actualweight/100)*eppercentage).toFixed(1)
    // if(actualep > 0){
    //   weight = actualep
    //   actualweight = actualweightcom
    // }else{
    //   weight = $(this).data('weight');   
    // }
    var id = $(this).data('id');
    var rate = $(this).data('rate');   
    $('#sscommitment').val(id)
    $('#ssrate ').val(rate)
    $('#commitmentmodal').modal('hide');
    $('#ssweight').val(actualweight)
    $('#ssep').val(actualep)

    $('#sstotal').val(parseInt(rate*actualep))

    // Call the assignCommitment function with the retrieved arguments
});

function changeep(){
    var actualweightcom = document.getElementById('actualweightcom').value
    ep =  ((actualweightcom/100)*billableeppercentage).toFixed(1)
    document.getElementById('actualepcom').value = ep


}
function changeweight(){
  var ep = document.getElementById('actualepcom').value
    weight =  ((ep*100)/billableeppercentage).toFixed(1)
    document.getElementById('actualweightcom').value = weight

}

 </script>
<!-- Include Axios library (if not already included) -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<!-- Your existing HTML code -->

<script>
  window.individualstorein = function () {
     
    // var geturl = routeName == 'featured' ? 'featuredpropertieslist' : 'propertieslist'  // Assuming you're passing this variable from EJS
    // var buttonname = routeName == 'featured' ? 'Remove From Featured' : 'Add To Featured'  // Assuming you're passing this variable from EJS
    const responsive = '<%= resptype %>' === 'true'; // Convert the string to a boolean

    storeIntable = $('#storeIntable').DataTable({
      responsive: responsive,
      processing: true,
      serverSide: true,
      ajax: {
        url: '/productwisestorein', // Replace with your API endpoint
        dataSrc: 'data', // Key that holds the array of data in the API response
        data: function (d) {
             d.name = name; // Add the 'name' parameter to the data object
            return d;
          // Add any additional parameters you want to send to the server here
        },
      },
      columns: [
      {
          data: null,
          render: function (data, type, row) {
            return `<a href="#" onclick="showstoreindetail('${row.item}')"> ${row.item}</a>`
        // { data: 'item'
          }
      
      },
        // { data: 'lotnumber' },
        { data: 'totalStorageWeight' },
        { data: 'eppercentage' },
        { data: 'totalStorageep' },

        {
          data: null,
          render: function (data, type, row) {
            return `<div class="dropdown">
                <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                  <i class="bx bx-dots-vertical-rounded"></i>
                </button>
                <div class="dropdown-menu">
                  <a class="dropdown-item featured-button" onclick="showstoreindetail('${row.item}')" href="javascript:void(0);"><i class="bx bx-eye me-1"></i>View</a>
                  <a class="dropdown-item add-storein-bill" data-id="${row.item}" data-weight="${row.totalStorageWeight}"  data-percentage="${row.eppercentage}" data-epweight="${row.totalStorageep}" href="#"><i class="bx bx-edit me-1"></i> Add Bill</a>
                </div>
              </div>`;
          },
        },
      ],
    });

    $('#storeIntable').on('click', '.add-storein-bill', function() {
    var id = $(this).data('id');
    var weight = $(this).data('weight');
    var percentage = $(this).data('percentage');
    var epweight = $(this).data('epweight');
    $('#storeinitemname').text(id)
    $('#storeinitemep').text(epweight)
    $('#storeinitemweight').text(weight)
    $('#storeinitemepp').text(percentage)
    billableep  = epweight;
    billableweight = weight;
    billableeppercentage = percentage;

    var today = new Date();
    var dd = String(today.getDate()).padStart(2, '0');
    var mm = String(today.getMonth() + 1).padStart(2, '0'); // January is 0!
    var yyyy = today.getFullYear();
    var formattedDate = yyyy + '-' + mm + '-' + dd;
    $('#ssdate').val(formattedDate);
    $('#ssepp').val(percentage);
    $('#ssitem').val(id);

    const modal = document.getElementById('purchasestorebill');
    modal.style.display = 'flex';

    $('#ssreference').focus();
    updateValues();


    })

    // Delete Button Click Event
  

    // $('#example').on('click', '.featured-button', function () {
    //   var data = dataTable.row($(this).closest('tr')).data();
    //   var id = data._id;

    //   if (routeName === 'featured') {
    //     toggleFeatured(id, true); // Remove from Featured
    //   } else if (routeName === 'properties') {
    //     toggleFeatured(id, false); // Add to Featured
    //   }
    // });

  }


  function closepurchasesetllement() {
    const modal = document.getElementById('purchasestorebill');
    modal.style.display = 'none';
  }
  function updateValues() {
    var ssweight = parseFloat($('#ssweight').val()) || 0;
    var ssepp = parseFloat($('#ssepp').val()) || 100;
    var ssrate = parseFloat($('#ssrate').val()) || 0;

    // Calculate ssep and round to one decimal place
    var ssep = (ssweight / 100) * ssepp;
    $('#ssep').val(ssep.toFixed(1));

    // Calculate sstotal and round to integer
    var sstotal = Math.round(ssep * ssrate);
    $('#sstotal').val(sstotal);
}

// Event listeners for ssweight and ssrate inputs
$('#ssweight, #ssrate,#ssepp').on('input', function() {
    updateValues();
});

async function postpurchasesettlement() {
    const ssdate = document.getElementById('ssdate').value;
    const sscrop = document.getElementById('sscrop').value;
    const ssreference = document.getElementById('ssreference').value;
    const ssweight = document.getElementById('ssweight').value;
    const ssep = document.getElementById('ssep').value;
    const ssepp = document.getElementById('ssepp').value;
    const ssrate = document.getElementById('ssrate').value;
    const ssitem = document.getElementById('ssitem').value;
    const sscommitment = document.getElementById('sscommitment').value;
    const sstotal = document.getElementById('sstotal').value;

    const payload = {
      name:name,
      ssdate: ssdate,
      sscrop: sscrop,
      ssreference: ssreference,
      ssweight: ssweight,
      ssep: ssep,
      ssepp: ssepp,
      ssrate: ssrate,
      ssitem: ssitem,
      sscommitment:sscommitment,
      sstotal:sstotal
    };
    if(!ssdate||!ssweight||!ssepp||!ssrate||!ssitem){
      return alert('Please fill Date,Item,Weight,Ep,Rate fields')
    }

  
    try {
      // Use Axios to make the POST request
      const response = await axios.post('/addstoreinsettlement', payload, {
        headers: {
          'Content-Type': 'application/json',
        },
      });

      // Handle the response (you can add your own logic here)
      storeIntable.ajax.reload();
      document.getElementById('sscommitment').value = ''
      // Close the modal after server response
      closepurchasesetllement();
      getdetailedreport()
    } catch (error) {
      // Handle errors, such as network issues or server errors
      console.log('Error:', error);
    }
  }
 
</script>